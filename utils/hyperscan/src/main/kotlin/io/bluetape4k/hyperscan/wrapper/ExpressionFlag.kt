package io.bluetape4k.hyperscan.wrapper

import com.gliwka.hyperscan.jni.hyperscan.HS_FLAG_ALLOWEMPTY
import com.gliwka.hyperscan.jni.hyperscan.HS_FLAG_CASELESS
import com.gliwka.hyperscan.jni.hyperscan.HS_FLAG_COMBINATION
import com.gliwka.hyperscan.jni.hyperscan.HS_FLAG_DOTALL
import com.gliwka.hyperscan.jni.hyperscan.HS_FLAG_MULTILINE
import com.gliwka.hyperscan.jni.hyperscan.HS_FLAG_PREFILTER
import com.gliwka.hyperscan.jni.hyperscan.HS_FLAG_QUIET
import com.gliwka.hyperscan.jni.hyperscan.HS_FLAG_SINGLEMATCH
import com.gliwka.hyperscan.jni.hyperscan.HS_FLAG_SOM_LEFTMOST
import com.gliwka.hyperscan.jni.hyperscan.HS_FLAG_UCP
import com.gliwka.hyperscan.jni.hyperscan.HS_FLAG_UTF8

/**
 * Flags influencing the matching behaviour of the scanner for a particular Expression
 *
 * @property bits the significant bits for the flag
 */
enum class ExpressionFlag(override val bits: Int): BitFlag {

    /**
     * Expression will be compiled with no flags.
     */
    NO_FLAG(0),

    /**
     * Matching will be performed case-insensitively.
     */
    CASELESS(HS_FLAG_CASELESS),

    /**
     * Matching a . will not exclude newlines.
     */
    DOTALL(HS_FLAG_DOTALL),

    /**
     * ^ and $ anchors match any newlines in data.
     */
    MULTILINE(HS_FLAG_MULTILINE),

    /**
     * Only one match will be generated by the expression per stream.
     */
    SINGLEMATCH(HS_FLAG_SINGLEMATCH),

    /**
     * Allow expressions which can match against an empty string, such as .*.
     */
    ALLOWEMPTY(HS_FLAG_ALLOWEMPTY),

    /**
     * Treat this pattern as a sequence of UTF-8 characters.
     */
    UTF8(HS_FLAG_UTF8),

    /**
     * Use Unicode properties for character classes.
     */
    UCP(HS_FLAG_UCP),

    /**
     * compile pattern in prefiltering mode.
     */
    PREFILTER(HS_FLAG_PREFILTER),

    /**
     * Report the leftmost start of match offset when a match is found.
     */
    SOM_LEFTMOST(HS_FLAG_SOM_LEFTMOST),

    /**
     * Parse the expression in logical combination syntax.
     */
    COMBINATION(HS_FLAG_COMBINATION),

    /**
     * Ignore match reporting for this expression. Used for the sub-expressions in logical combinations.
     */
    QUIET(HS_FLAG_QUIET)
}
