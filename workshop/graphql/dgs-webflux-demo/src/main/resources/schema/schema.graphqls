type Query {
    shows(titleFilter:String): [Show]
    reviews(dateRange:DateRange): [Review]
}

type Mutation {
    addReview(review: SubmittedReview): [Review]
    addReviews(reviews: [SubmittedReview]): [Review]

    addArtwork(showId:Int!, upload: Upload!): [Image]! @skipcodegen
}

type Subscription {
    reviewAdded(showId:Int!): Review
}

type Show {
    id: Int
    title: String
    releaseYear: Int
    reviews(minScore:Int): [Review]
}

type Review {
    username:String
    starScore: Int
    submittedDate: Instant
}

input SubmittedReview {
    showId: Int!
    username:String!
    starScore:Int!
}

type Image {
    url: String!
}

scalar DateRange
scalar Instant
scalar OffsetDateTime
scalar DateTime
scalar Upload
directive @skipcodegen on FIELD_DEFINITION
